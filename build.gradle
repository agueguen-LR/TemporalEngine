import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.3.6"
project.ext.jomlVersion = "1.10.7"

switch(OperatingSystem.current()){
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"

		def osArch = System.getProperty("os.arch")
		if(osArch.startsWith("arm") || osArch.startsWith("aarch64"))
			project.ext.lwjglNatives +=
				osArch.contains("64") || osArch.startsWith("armv8")
				? "-arm64" : "-arm32"
		else if(osArch.startsWith("ppc"))
			project.ext.lwjglNatives += "-ppc64le"
		else if(osArch.startsWith("riscv"))
			project.ext.lwjglNatives += "-riscv64"

		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
}

subprojects{
	apply plugin: "java"

	group = "games.temporalstudio"

	java{
		sourceCompatibility = JavaVersion.VERSION_21
	}

	repositories{
		mavenCentral()
	}
}

project(":TemporalEngine"){
	apply plugin: "java-library"

	version = "1.0.0-b.1"

	base{
		archivesName = "temporalengine"
	}

	dependencies{
		api platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

		implementation "org.lwjgl:lwjgl"
		implementation "org.lwjgl:lwjgl-assimp"
		api "org.lwjgl:lwjgl-glfw"
		implementation "org.lwjgl:lwjgl-openal"
		implementation "org.lwjgl:lwjgl-opengl"
		implementation "org.lwjgl:lwjgl-stb"

		implementation "com.electronwill.night-config:toml:3.8.2"
		implementation "com.electronwill.night-config:json:3.8.2"
		api "org.joml:joml:${jomlVersion}"
		implementation 'org.tiledreader:TiledReader:1.1.0'

		runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
		runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
		runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
		runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
		runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
		runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	}
}

project(":TimeCapsule"){
	apply plugin: "application"

	def appName = "Time Capsule"
	version = "1.0.0"

	base{
		archivesName = appName
	}

	dependencies{
		implementation project(':TemporalEngine')
	}

	application{
		applicationName = appName
		mainClass = "games.temporalstudio.timecapsule.Launcher"
	}

	task runEngine(type: JavaExec){
		group = "application"
		description = "Runs engine test part this project as a JVM application."

		mainClass = application.mainClass
    	classpath = sourceSets.main.runtimeClasspath
		args = ["engine"]
	}

	distributions{
		main{
			distributionBaseName = appName
		}
	}
}